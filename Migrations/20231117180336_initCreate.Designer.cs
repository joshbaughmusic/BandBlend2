// <auto-generated />
using System;
using BandBlend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BandBlend2.Migrations
{
    [DbContext(typeof(BandBlendDbContext))]
    [Migration("20231117180336_initCreate")]
    partial class initCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BandBlend.Models.AdditionalPicture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.Property<int>("UserProfileId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("AdditionalPictures");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Url = "https://images.unsplash.com/photo-1516122276289-c28ffbaf888c?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1287&q=80",
                            UserProfileId = 1
                        },
                        new
                        {
                            Id = 2,
                            Url = "https://images.unsplash.com/photo-1516122276289-c28ffbaf888c?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1287&q=80",
                            UserProfileId = 1
                        },
                        new
                        {
                            Id = 3,
                            Url = "https://images.unsplash.com/photo-1516122276289-c28ffbaf888c?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1287&q=80",
                            UserProfileId = 2
                        });
                });

            modelBuilder.Entity("BandBlend.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Body")
                        .HasColumnType("text");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("PostId")
                        .HasColumnType("integer");

                    b.Property<int>("UserProfileId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.HasIndex("UserProfileId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Body = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.",
                            Date = new DateTime(2023, 11, 6, 12, 5, 0, 0, DateTimeKind.Unspecified),
                            PostId = 1,
                            UserProfileId = 2
                        },
                        new
                        {
                            Id = 2,
                            Body = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.",
                            Date = new DateTime(2023, 11, 6, 12, 5, 0, 0, DateTimeKind.Unspecified),
                            PostId = 1,
                            UserProfileId = 2
                        },
                        new
                        {
                            Id = 3,
                            Body = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.",
                            Date = new DateTime(2023, 11, 6, 12, 5, 0, 0, DateTimeKind.Unspecified),
                            PostId = 1,
                            UserProfileId = 2
                        },
                        new
                        {
                            Id = 4,
                            Body = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.",
                            Date = new DateTime(2023, 11, 6, 12, 5, 0, 0, DateTimeKind.Unspecified),
                            PostId = 1,
                            UserProfileId = 1
                        },
                        new
                        {
                            Id = 5,
                            Body = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.",
                            Date = new DateTime(2023, 11, 6, 12, 5, 0, 0, DateTimeKind.Unspecified),
                            PostId = 1,
                            UserProfileId = 2
                        },
                        new
                        {
                            Id = 6,
                            Body = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.",
                            Date = new DateTime(2023, 11, 6, 12, 5, 0, 0, DateTimeKind.Unspecified),
                            PostId = 1,
                            UserProfileId = 1
                        },
                        new
                        {
                            Id = 7,
                            Body = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.",
                            Date = new DateTime(2023, 11, 6, 12, 5, 0, 0, DateTimeKind.Unspecified),
                            PostId = 1,
                            UserProfileId = 2
                        },
                        new
                        {
                            Id = 8,
                            Body = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.",
                            Date = new DateTime(2023, 11, 6, 12, 5, 0, 0, DateTimeKind.Unspecified),
                            PostId = 1,
                            UserProfileId = 9
                        },
                        new
                        {
                            Id = 9,
                            Body = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.",
                            Date = new DateTime(2023, 11, 6, 12, 5, 0, 0, DateTimeKind.Unspecified),
                            PostId = 1,
                            UserProfileId = 3
                        },
                        new
                        {
                            Id = 10,
                            Body = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.",
                            Date = new DateTime(2023, 11, 6, 12, 5, 0, 0, DateTimeKind.Unspecified),
                            PostId = 1,
                            UserProfileId = 4
                        },
                        new
                        {
                            Id = 11,
                            Body = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.",
                            Date = new DateTime(2023, 11, 6, 12, 5, 0, 0, DateTimeKind.Unspecified),
                            PostId = 2,
                            UserProfileId = 2
                        },
                        new
                        {
                            Id = 12,
                            Body = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.",
                            Date = new DateTime(2023, 11, 6, 12, 5, 0, 0, DateTimeKind.Unspecified),
                            PostId = 2,
                            UserProfileId = 2
                        },
                        new
                        {
                            Id = 13,
                            Body = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.",
                            Date = new DateTime(2023, 11, 6, 12, 5, 0, 0, DateTimeKind.Unspecified),
                            PostId = 2,
                            UserProfileId = 1
                        },
                        new
                        {
                            Id = 14,
                            Body = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.",
                            Date = new DateTime(2023, 11, 6, 12, 5, 0, 0, DateTimeKind.Unspecified),
                            PostId = 2,
                            UserProfileId = 4
                        },
                        new
                        {
                            Id = 15,
                            Body = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.",
                            Date = new DateTime(2023, 11, 6, 12, 5, 0, 0, DateTimeKind.Unspecified),
                            PostId = 2,
                            UserProfileId = 2
                        },
                        new
                        {
                            Id = 16,
                            Body = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.",
                            Date = new DateTime(2023, 11, 6, 12, 5, 0, 0, DateTimeKind.Unspecified),
                            PostId = 2,
                            UserProfileId = 1
                        },
                        new
                        {
                            Id = 17,
                            Body = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.",
                            Date = new DateTime(2023, 11, 6, 12, 5, 0, 0, DateTimeKind.Unspecified),
                            PostId = 2,
                            UserProfileId = 2
                        },
                        new
                        {
                            Id = 18,
                            Body = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.",
                            Date = new DateTime(2023, 11, 6, 12, 5, 0, 0, DateTimeKind.Unspecified),
                            PostId = 1,
                            UserProfileId = 2
                        },
                        new
                        {
                            Id = 19,
                            Body = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.",
                            Date = new DateTime(2023, 11, 6, 12, 5, 0, 0, DateTimeKind.Unspecified),
                            PostId = 1,
                            UserProfileId = 2
                        },
                        new
                        {
                            Id = 20,
                            Body = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.",
                            Date = new DateTime(2023, 11, 6, 12, 5, 0, 0, DateTimeKind.Unspecified),
                            PostId = 2,
                            UserProfileId = 1
                        });
                });

            modelBuilder.Entity("BandBlend.Models.CommentLike", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CommentId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("UserProfileId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CommentId");

                    b.HasIndex("UserProfileId");

                    b.ToTable("CommentLikes");
                });

            modelBuilder.Entity("BandBlend.Models.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Body")
                        .HasColumnType("text");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsRead")
                        .HasColumnType("boolean");

                    b.Property<int>("ReceiverId")
                        .HasColumnType("integer");

                    b.Property<int>("SenderId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ReceiverId");

                    b.HasIndex("SenderId");

                    b.ToTable("Messages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Body = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.",
                            Date = new DateTime(2023, 11, 6, 12, 5, 0, 0, DateTimeKind.Unspecified),
                            IsRead = false,
                            ReceiverId = 2,
                            SenderId = 1
                        },
                        new
                        {
                            Id = 2,
                            Body = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.",
                            Date = new DateTime(2023, 11, 6, 12, 6, 0, 0, DateTimeKind.Unspecified),
                            IsRead = false,
                            ReceiverId = 1,
                            SenderId = 2
                        });
                });

            modelBuilder.Entity("BandBlend.Models.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Body")
                        .HasColumnType("text");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("UserProfileId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserProfileId");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Body = "Post 1",
                            Date = new DateTime(2023, 11, 6, 12, 2, 0, 0, DateTimeKind.Unspecified),
                            UserProfileId = 1
                        },
                        new
                        {
                            Id = 2,
                            Body = "Post 2",
                            Date = new DateTime(2023, 11, 6, 12, 3, 0, 0, DateTimeKind.Unspecified),
                            UserProfileId = 1
                        },
                        new
                        {
                            Id = 3,
                            Body = "Post 3",
                            Date = new DateTime(2023, 11, 6, 12, 2, 0, 0, DateTimeKind.Unspecified),
                            UserProfileId = 2
                        },
                        new
                        {
                            Id = 4,
                            Body = "Post 4",
                            Date = new DateTime(2023, 11, 6, 12, 2, 0, 0, DateTimeKind.Unspecified),
                            UserProfileId = 1
                        },
                        new
                        {
                            Id = 5,
                            Body = "Post 5",
                            Date = new DateTime(2023, 11, 6, 12, 2, 0, 0, DateTimeKind.Unspecified),
                            UserProfileId = 1
                        },
                        new
                        {
                            Id = 6,
                            Body = "Post 6",
                            Date = new DateTime(2023, 11, 6, 12, 2, 0, 0, DateTimeKind.Unspecified),
                            UserProfileId = 1
                        },
                        new
                        {
                            Id = 7,
                            Body = "Post 7",
                            Date = new DateTime(2023, 11, 6, 12, 2, 0, 0, DateTimeKind.Unspecified),
                            UserProfileId = 1
                        },
                        new
                        {
                            Id = 8,
                            Body = "Post 8",
                            Date = new DateTime(2023, 11, 6, 12, 2, 0, 0, DateTimeKind.Unspecified),
                            UserProfileId = 1
                        },
                        new
                        {
                            Id = 9,
                            Body = "Post 9",
                            Date = new DateTime(2023, 11, 6, 12, 2, 0, 0, DateTimeKind.Unspecified),
                            UserProfileId = 1
                        },
                        new
                        {
                            Id = 10,
                            Body = "Post 10",
                            Date = new DateTime(2023, 11, 6, 12, 2, 0, 0, DateTimeKind.Unspecified),
                            UserProfileId = 1
                        },
                        new
                        {
                            Id = 11,
                            Body = "Post 11",
                            Date = new DateTime(2023, 11, 6, 12, 2, 0, 0, DateTimeKind.Unspecified),
                            UserProfileId = 1
                        },
                        new
                        {
                            Id = 12,
                            Body = "Post 12",
                            Date = new DateTime(2023, 11, 6, 12, 2, 0, 0, DateTimeKind.Unspecified),
                            UserProfileId = 1
                        },
                        new
                        {
                            Id = 13,
                            Body = "Post 13",
                            Date = new DateTime(2023, 11, 6, 12, 2, 0, 0, DateTimeKind.Unspecified),
                            UserProfileId = 2
                        },
                        new
                        {
                            Id = 14,
                            Body = "Post 14",
                            Date = new DateTime(2023, 11, 6, 12, 2, 0, 0, DateTimeKind.Unspecified),
                            UserProfileId = 2
                        },
                        new
                        {
                            Id = 15,
                            Body = "Post 15",
                            Date = new DateTime(2023, 11, 6, 12, 2, 0, 0, DateTimeKind.Unspecified),
                            UserProfileId = 2
                        });
                });

            modelBuilder.Entity("BandBlend.Models.PostLike", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("PostId")
                        .HasColumnType("integer");

                    b.Property<int>("UserProfileId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.HasIndex("UserProfileId");

                    b.ToTable("PostLikes");
                });

            modelBuilder.Entity("BandBlend.Models.PrimaryGenre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("PrimaryGenres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Rock"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Alternative"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Blues"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Classical"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Country"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Electronic"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Folk"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Hip-Hop"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Indie"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Jazz"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Metal"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Pop"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Punk"
                        },
                        new
                        {
                            Id = 14,
                            Name = "R&B"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Rap"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Reggae"
                        });
                });

            modelBuilder.Entity("BandBlend.Models.PrimaryInstrument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("PrimaryInstruments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Acoustic Guitar"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Electric Guitar"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Bass"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Drums"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Violin"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Saxophone"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Keyboard"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Piano"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Trumpet"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Flute"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Steel Drum"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Harp"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Trombone"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Clarinet"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Vocals"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Other"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Band"
                        });
                });

            modelBuilder.Entity("BandBlend.Models.Profile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("About")
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<string>("FacebookLink")
                        .HasColumnType("text");

                    b.Property<string>("InstagramLink")
                        .HasColumnType("text");

                    b.Property<int>("PrimaryGenreId")
                        .HasColumnType("integer");

                    b.Property<int?>("PrimaryInstrumentId")
                        .HasColumnType("integer");

                    b.Property<string>("ProfilePicture")
                        .HasColumnType("text");

                    b.Property<string>("SpotifyLink")
                        .HasColumnType("text");

                    b.Property<int>("StateId")
                        .HasColumnType("integer");

                    b.Property<string>("TikTokLink")
                        .HasColumnType("text");

                    b.Property<int>("UserProfileId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PrimaryGenreId");

                    b.HasIndex("PrimaryInstrumentId");

                    b.HasIndex("StateId");

                    b.HasIndex("UserProfileId")
                        .IsUnique();

                    b.ToTable("Profiles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            About = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
                            City = "Nashville",
                            FacebookLink = "https://www.facebook.com/joshbaughmusic/",
                            InstagramLink = "https://www.instagram.com/joshbaughmusic/",
                            PrimaryGenreId = 1,
                            PrimaryInstrumentId = 1,
                            ProfilePicture = "https://images.unsplash.com/photo-1516122276289-c28ffbaf888c?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1287&q=80",
                            StateId = 42,
                            UserProfileId = 1
                        },
                        new
                        {
                            Id = 2,
                            About = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
                            City = "Somewhere",
                            FacebookLink = "https://www.facebook.com/joshbaughmusic/",
                            InstagramLink = "https://www.instagram.com/joshbaughmusic/",
                            PrimaryGenreId = 2,
                            PrimaryInstrumentId = 2,
                            ProfilePicture = "https://images.unsplash.com/photo-1516122276289-c28ffbaf888c?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1287&q=80",
                            SpotifyLink = "https://www.facebook.com/joshbaughmusic/",
                            StateId = 40,
                            TikTokLink = "https://www.facebook.com/joshbaughmusic/",
                            UserProfileId = 2
                        },
                        new
                        {
                            Id = 3,
                            About = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
                            City = "Somewhere",
                            FacebookLink = "https://www.facebook.com/joshbaughmusic/",
                            InstagramLink = "https://www.instagram.com/joshbaughmusic/",
                            PrimaryGenreId = 2,
                            PrimaryInstrumentId = 2,
                            ProfilePicture = "https://images.unsplash.com/photo-1516122276289-c28ffbaf888c?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1287&q=80",
                            SpotifyLink = "https://www.facebook.com/joshbaughmusic/",
                            StateId = 40,
                            TikTokLink = "https://www.facebook.com/joshbaughmusic/",
                            UserProfileId = 3
                        },
                        new
                        {
                            Id = 4,
                            About = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
                            City = "Somewhere",
                            FacebookLink = "https://www.facebook.com/joshbaughmusic/",
                            InstagramLink = "https://www.instagram.com/joshbaughmusic/",
                            PrimaryGenreId = 2,
                            PrimaryInstrumentId = 2,
                            ProfilePicture = "https://images.unsplash.com/photo-1516122276289-c28ffbaf888c?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1287&q=80",
                            SpotifyLink = "https://www.facebook.com/joshbaughmusic/",
                            StateId = 40,
                            TikTokLink = "https://www.facebook.com/joshbaughmusic/",
                            UserProfileId = 4
                        },
                        new
                        {
                            Id = 5,
                            About = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
                            City = "Somewhere",
                            FacebookLink = "https://www.facebook.com/joshbaughmusic/",
                            InstagramLink = "https://www.instagram.com/joshbaughmusic/",
                            PrimaryGenreId = 2,
                            PrimaryInstrumentId = 2,
                            ProfilePicture = "https://images.unsplash.com/photo-1516122276289-c28ffbaf888c?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1287&q=80",
                            SpotifyLink = "https://www.facebook.com/joshbaughmusic/",
                            StateId = 40,
                            TikTokLink = "https://www.facebook.com/joshbaughmusic/",
                            UserProfileId = 5
                        },
                        new
                        {
                            Id = 6,
                            About = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
                            City = "Somewhere",
                            FacebookLink = "https://www.facebook.com/joshbaughmusic/",
                            InstagramLink = "https://www.instagram.com/joshbaughmusic/",
                            PrimaryGenreId = 2,
                            PrimaryInstrumentId = 2,
                            ProfilePicture = "https://images.unsplash.com/photo-1516122276289-c28ffbaf888c?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1287&q=80",
                            SpotifyLink = "https://www.facebook.com/joshbaughmusic/",
                            StateId = 40,
                            TikTokLink = "https://www.facebook.com/joshbaughmusic/",
                            UserProfileId = 6
                        },
                        new
                        {
                            Id = 7,
                            About = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
                            City = "Somewhere",
                            FacebookLink = "https://www.facebook.com/joshbaughmusic/",
                            InstagramLink = "https://www.instagram.com/joshbaughmusic/",
                            PrimaryGenreId = 2,
                            PrimaryInstrumentId = 2,
                            ProfilePicture = "https://images.unsplash.com/photo-1516122276289-c28ffbaf888c?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1287&q=80",
                            SpotifyLink = "https://www.facebook.com/joshbaughmusic/",
                            StateId = 40,
                            TikTokLink = "https://www.facebook.com/joshbaughmusic/",
                            UserProfileId = 7
                        },
                        new
                        {
                            Id = 8,
                            About = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
                            City = "Somewhere",
                            FacebookLink = "https://www.facebook.com/joshbaughmusic/",
                            InstagramLink = "https://www.instagram.com/joshbaughmusic/",
                            PrimaryGenreId = 2,
                            PrimaryInstrumentId = 2,
                            ProfilePicture = "https://images.unsplash.com/photo-1516122276289-c28ffbaf888c?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1287&q=80",
                            SpotifyLink = "https://www.facebook.com/joshbaughmusic/",
                            StateId = 40,
                            TikTokLink = "https://www.facebook.com/joshbaughmusic/",
                            UserProfileId = 8
                        },
                        new
                        {
                            Id = 9,
                            About = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
                            City = "Somewhere",
                            FacebookLink = "https://www.facebook.com/joshbaughmusic/",
                            InstagramLink = "https://www.instagram.com/joshbaughmusic/",
                            PrimaryGenreId = 2,
                            PrimaryInstrumentId = 2,
                            ProfilePicture = "https://images.unsplash.com/photo-1516122276289-c28ffbaf888c?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1287&q=80",
                            SpotifyLink = "https://www.facebook.com/joshbaughmusic/",
                            StateId = 40,
                            TikTokLink = "https://www.facebook.com/joshbaughmusic/",
                            UserProfileId = 9
                        },
                        new
                        {
                            Id = 10,
                            About = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
                            City = "Somewhere",
                            FacebookLink = "https://www.facebook.com/joshbaughmusic/",
                            InstagramLink = "https://www.instagram.com/joshbaughmusic/",
                            PrimaryGenreId = 2,
                            PrimaryInstrumentId = 2,
                            ProfilePicture = "https://images.unsplash.com/photo-1516122276289-c28ffbaf888c?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1287&q=80",
                            SpotifyLink = "https://www.facebook.com/joshbaughmusic/",
                            StateId = 40,
                            TikTokLink = "https://www.facebook.com/joshbaughmusic/",
                            UserProfileId = 10
                        },
                        new
                        {
                            Id = 11,
                            About = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
                            City = "Somewhere",
                            FacebookLink = "https://www.facebook.com/joshbaughmusic/",
                            InstagramLink = "https://www.instagram.com/joshbaughmusic/",
                            PrimaryGenreId = 2,
                            PrimaryInstrumentId = 2,
                            ProfilePicture = "https://images.unsplash.com/photo-1516122276289-c28ffbaf888c?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1287&q=80",
                            SpotifyLink = "https://www.facebook.com/joshbaughmusic/",
                            StateId = 40,
                            TikTokLink = "https://www.facebook.com/joshbaughmusic/",
                            UserProfileId = 11
                        },
                        new
                        {
                            Id = 12,
                            About = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
                            City = "Somewhere",
                            FacebookLink = "https://www.facebook.com/joshbaughmusic/",
                            InstagramLink = "https://www.instagram.com/joshbaughmusic/",
                            PrimaryGenreId = 2,
                            PrimaryInstrumentId = 2,
                            ProfilePicture = "https://images.unsplash.com/photo-1516122276289-c28ffbaf888c?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1287&q=80",
                            SpotifyLink = "https://www.facebook.com/joshbaughmusic/",
                            StateId = 40,
                            TikTokLink = "https://www.facebook.com/joshbaughmusic/",
                            UserProfileId = 12
                        },
                        new
                        {
                            Id = 13,
                            About = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
                            City = "Somewhere",
                            FacebookLink = "https://www.facebook.com/joshbaughmusic/",
                            InstagramLink = "https://www.instagram.com/joshbaughmusic/",
                            PrimaryGenreId = 2,
                            PrimaryInstrumentId = 2,
                            ProfilePicture = "https://images.unsplash.com/photo-1516122276289-c28ffbaf888c?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1287&q=80",
                            SpotifyLink = "https://www.facebook.com/joshbaughmusic/",
                            StateId = 40,
                            TikTokLink = "https://www.facebook.com/joshbaughmusic/",
                            UserProfileId = 13
                        },
                        new
                        {
                            Id = 14,
                            About = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
                            City = "Somewhere",
                            FacebookLink = "https://www.facebook.com/joshbaughmusic/",
                            InstagramLink = "https://www.instagram.com/joshbaughmusic/",
                            PrimaryGenreId = 2,
                            PrimaryInstrumentId = 2,
                            ProfilePicture = "https://images.unsplash.com/photo-1516122276289-c28ffbaf888c?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1287&q=80",
                            SpotifyLink = "https://www.facebook.com/joshbaughmusic/",
                            StateId = 40,
                            TikTokLink = "https://www.facebook.com/joshbaughmusic/",
                            UserProfileId = 14
                        },
                        new
                        {
                            Id = 15,
                            About = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
                            City = "Somewhere",
                            FacebookLink = "https://www.facebook.com/joshbaughmusic/",
                            InstagramLink = "https://www.instagram.com/joshbaughmusic/",
                            PrimaryGenreId = 2,
                            PrimaryInstrumentId = 2,
                            ProfilePicture = "https://images.unsplash.com/photo-1516122276289-c28ffbaf888c?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1287&q=80",
                            SpotifyLink = "https://www.facebook.com/joshbaughmusic/",
                            StateId = 40,
                            TikTokLink = "https://www.facebook.com/joshbaughmusic/",
                            UserProfileId = 15
                        },
                        new
                        {
                            Id = 16,
                            About = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
                            City = "Somewhere",
                            FacebookLink = "https://www.facebook.com/joshbaughmusic/",
                            InstagramLink = "https://www.instagram.com/joshbaughmusic/",
                            PrimaryGenreId = 2,
                            PrimaryInstrumentId = 2,
                            ProfilePicture = "https://images.unsplash.com/photo-1516122276289-c28ffbaf888c?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1287&q=80",
                            SpotifyLink = "https://www.facebook.com/joshbaughmusic/",
                            StateId = 40,
                            TikTokLink = "https://www.facebook.com/joshbaughmusic/",
                            UserProfileId = 16
                        },
                        new
                        {
                            Id = 17,
                            About = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
                            City = "Somewhere",
                            FacebookLink = "https://www.facebook.com/joshbaughmusic/",
                            InstagramLink = "https://www.instagram.com/joshbaughmusic/",
                            PrimaryGenreId = 2,
                            PrimaryInstrumentId = 2,
                            ProfilePicture = "https://images.unsplash.com/photo-1516122276289-c28ffbaf888c?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1287&q=80",
                            SpotifyLink = "https://www.facebook.com/joshbaughmusic/",
                            StateId = 40,
                            TikTokLink = "https://www.facebook.com/joshbaughmusic/",
                            UserProfileId = 17
                        },
                        new
                        {
                            Id = 18,
                            About = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
                            City = "Somewhere",
                            FacebookLink = "https://www.facebook.com/joshbaughmusic/",
                            InstagramLink = "https://www.instagram.com/joshbaughmusic/",
                            PrimaryGenreId = 2,
                            PrimaryInstrumentId = 2,
                            ProfilePicture = "https://images.unsplash.com/photo-1516122276289-c28ffbaf888c?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1287&q=80",
                            SpotifyLink = "https://www.facebook.com/joshbaughmusic/",
                            StateId = 40,
                            TikTokLink = "https://www.facebook.com/joshbaughmusic/",
                            UserProfileId = 18
                        },
                        new
                        {
                            Id = 19,
                            About = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
                            City = "Somewhere",
                            FacebookLink = "https://www.facebook.com/joshbaughmusic/",
                            InstagramLink = "https://www.instagram.com/joshbaughmusic/",
                            PrimaryGenreId = 2,
                            PrimaryInstrumentId = 2,
                            ProfilePicture = "https://images.unsplash.com/photo-1516122276289-c28ffbaf888c?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1287&q=80",
                            SpotifyLink = "https://www.facebook.com/joshbaughmusic/",
                            StateId = 40,
                            TikTokLink = "https://www.facebook.com/joshbaughmusic/",
                            UserProfileId = 19
                        },
                        new
                        {
                            Id = 20,
                            About = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
                            City = "Somewhere",
                            FacebookLink = "https://www.facebook.com/joshbaughmusic/",
                            InstagramLink = "https://www.instagram.com/joshbaughmusic/",
                            PrimaryGenreId = 2,
                            PrimaryInstrumentId = 2,
                            ProfilePicture = "https://images.unsplash.com/photo-1516122276289-c28ffbaf888c?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1287&q=80",
                            SpotifyLink = "https://www.facebook.com/joshbaughmusic/",
                            StateId = 40,
                            TikTokLink = "https://www.facebook.com/joshbaughmusic/",
                            UserProfileId = 20
                        });
                });

            modelBuilder.Entity("BandBlend.Models.ProfileSubGenre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ProfileId")
                        .HasColumnType("integer");

                    b.Property<int>("SubGenreId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProfileId");

                    b.HasIndex("SubGenreId");

                    b.ToTable("ProfileSubGenres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ProfileId = 1,
                            SubGenreId = 2
                        },
                        new
                        {
                            Id = 2,
                            ProfileId = 1,
                            SubGenreId = 3
                        },
                        new
                        {
                            Id = 3,
                            ProfileId = 1,
                            SubGenreId = 1
                        },
                        new
                        {
                            Id = 4,
                            ProfileId = 2,
                            SubGenreId = 4
                        },
                        new
                        {
                            Id = 5,
                            ProfileId = 2,
                            SubGenreId = 5
                        },
                        new
                        {
                            Id = 6,
                            ProfileId = 2,
                            SubGenreId = 6
                        });
                });

            modelBuilder.Entity("BandBlend.Models.ProfileTag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ProfileId")
                        .HasColumnType("integer");

                    b.Property<int>("TagId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProfileId");

                    b.HasIndex("TagId");

                    b.ToTable("ProfileTags");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ProfileId = 1,
                            TagId = 2
                        },
                        new
                        {
                            Id = 2,
                            ProfileId = 1,
                            TagId = 3
                        },
                        new
                        {
                            Id = 3,
                            ProfileId = 1,
                            TagId = 1
                        },
                        new
                        {
                            Id = 4,
                            ProfileId = 2,
                            TagId = 4
                        },
                        new
                        {
                            Id = 5,
                            ProfileId = 2,
                            TagId = 5
                        },
                        new
                        {
                            Id = 6,
                            ProfileId = 2,
                            TagId = 6
                        });
                });

            modelBuilder.Entity("BandBlend.Models.SavedProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ProfileId")
                        .HasColumnType("integer");

                    b.Property<int>("UserProfileId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProfileId")
                        .IsUnique();

                    b.HasIndex("UserProfileId");

                    b.ToTable("SavedProfiles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ProfileId = 2,
                            UserProfileId = 1
                        });
                });

            modelBuilder.Entity("BandBlend.Models.State", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("States");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "AL"
                        },
                        new
                        {
                            Id = 2,
                            Name = "AK"
                        },
                        new
                        {
                            Id = 3,
                            Name = "AZ"
                        },
                        new
                        {
                            Id = 4,
                            Name = "AR"
                        },
                        new
                        {
                            Id = 5,
                            Name = "CA"
                        },
                        new
                        {
                            Id = 6,
                            Name = "CO"
                        },
                        new
                        {
                            Id = 7,
                            Name = "CT"
                        },
                        new
                        {
                            Id = 8,
                            Name = "DE"
                        },
                        new
                        {
                            Id = 9,
                            Name = "FL"
                        },
                        new
                        {
                            Id = 10,
                            Name = "GA"
                        },
                        new
                        {
                            Id = 11,
                            Name = "HI"
                        },
                        new
                        {
                            Id = 12,
                            Name = "ID"
                        },
                        new
                        {
                            Id = 13,
                            Name = "IL"
                        },
                        new
                        {
                            Id = 14,
                            Name = "IN"
                        },
                        new
                        {
                            Id = 15,
                            Name = "IA"
                        },
                        new
                        {
                            Id = 16,
                            Name = "KS"
                        },
                        new
                        {
                            Id = 17,
                            Name = "KY"
                        },
                        new
                        {
                            Id = 18,
                            Name = "LA"
                        },
                        new
                        {
                            Id = 19,
                            Name = "ME"
                        },
                        new
                        {
                            Id = 20,
                            Name = "MD"
                        },
                        new
                        {
                            Id = 21,
                            Name = "MA"
                        },
                        new
                        {
                            Id = 22,
                            Name = "MI"
                        },
                        new
                        {
                            Id = 23,
                            Name = "MN"
                        },
                        new
                        {
                            Id = 24,
                            Name = "MS"
                        },
                        new
                        {
                            Id = 25,
                            Name = "MO"
                        },
                        new
                        {
                            Id = 26,
                            Name = "MT"
                        },
                        new
                        {
                            Id = 27,
                            Name = "NE"
                        },
                        new
                        {
                            Id = 28,
                            Name = "NV"
                        },
                        new
                        {
                            Id = 29,
                            Name = "NH"
                        },
                        new
                        {
                            Id = 30,
                            Name = "NJ"
                        },
                        new
                        {
                            Id = 31,
                            Name = "NM"
                        },
                        new
                        {
                            Id = 32,
                            Name = "NY"
                        },
                        new
                        {
                            Id = 33,
                            Name = "NC"
                        },
                        new
                        {
                            Id = 34,
                            Name = "ND"
                        },
                        new
                        {
                            Id = 35,
                            Name = "OH"
                        },
                        new
                        {
                            Id = 36,
                            Name = "OK"
                        },
                        new
                        {
                            Id = 37,
                            Name = "OR"
                        },
                        new
                        {
                            Id = 38,
                            Name = "PA"
                        },
                        new
                        {
                            Id = 39,
                            Name = "RI"
                        },
                        new
                        {
                            Id = 40,
                            Name = "SC"
                        },
                        new
                        {
                            Id = 41,
                            Name = "SD"
                        },
                        new
                        {
                            Id = 42,
                            Name = "TN"
                        },
                        new
                        {
                            Id = 43,
                            Name = "TX"
                        },
                        new
                        {
                            Id = 44,
                            Name = "UT"
                        },
                        new
                        {
                            Id = 45,
                            Name = "VT"
                        },
                        new
                        {
                            Id = 46,
                            Name = "VA"
                        },
                        new
                        {
                            Id = 47,
                            Name = "WA"
                        },
                        new
                        {
                            Id = 48,
                            Name = "WV"
                        },
                        new
                        {
                            Id = 49,
                            Name = "WI"
                        },
                        new
                        {
                            Id = 50,
                            Name = "WY"
                        });
                });

            modelBuilder.Entity("BandBlend.Models.SubGenre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("SubGenres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Acoustic Folk"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Alternative Rock"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Baroque"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Chicago Blues"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Classic Rock"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Contemporary R&B"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Country Pop"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Dance Pop"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Deathcore"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Delta Blues"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Dream Pop"
                        },
                        new
                        {
                            Id = 12,
                            Name = "East Coast Hip-Hop"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Fusion Jazz"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Glam Rock"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Grunge"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Hard Rock"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Hardcore Punk"
                        },
                        new
                        {
                            Id = 18,
                            Name = "House"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Indie Folk"
                        },
                        new
                        {
                            Id = 20,
                            Name = "Indie Pop"
                        },
                        new
                        {
                            Id = 21,
                            Name = "Melodic Death Metal"
                        },
                        new
                        {
                            Id = 22,
                            Name = "Metalcore"
                        },
                        new
                        {
                            Id = 23,
                            Name = "Motown"
                        },
                        new
                        {
                            Id = 24,
                            Name = "Neo-Soul"
                        },
                        new
                        {
                            Id = 25,
                            Name = "Nu Metal"
                        },
                        new
                        {
                            Id = 26,
                            Name = "Pop Punk"
                        },
                        new
                        {
                            Id = 27,
                            Name = "Pop Rock"
                        },
                        new
                        {
                            Id = 28,
                            Name = "Post-Punk"
                        },
                        new
                        {
                            Id = 29,
                            Name = "Progressive Metal"
                        },
                        new
                        {
                            Id = 30,
                            Name = "Punk"
                        },
                        new
                        {
                            Id = 31,
                            Name = "Smooth Jazz"
                        },
                        new
                        {
                            Id = 32,
                            Name = "Street Punk"
                        },
                        new
                        {
                            Id = 33,
                            Name = "Synth-pop"
                        },
                        new
                        {
                            Id = 34,
                            Name = "Techno"
                        },
                        new
                        {
                            Id = 35,
                            Name = "Thrash Metal"
                        },
                        new
                        {
                            Id = 36,
                            Name = "West Coast Hip-Hop"
                        });
                });

            modelBuilder.Entity("BandBlend.Models.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Hobbyist"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Professional"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Weekend Warrior"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Paying Gigs Only"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Passion First"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Serious"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Casual"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Collaborative"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Songwriter"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Versatile"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Session Musician"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Touring"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Recording"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Studio Musician"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Beginner Friendly"
                        });
                });

            modelBuilder.Entity("BandBlend.Models.UserProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("IdentityUserId")
                        .HasColumnType("text");

                    b.Property<bool>("IsBand")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IdentityUserId");

                    b.ToTable("UserProfiles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IdentityUserId = "dbc40bc6-0829-4ac5-a3ed-180f5e916a5f",
                            IsBand = false,
                            Name = "Josh Baugh"
                        },
                        new
                        {
                            Id = 2,
                            IdentityUserId = "7f4e6f8d-71ef-4b38-9aa1-6e39e4ec7c73",
                            IsBand = false,
                            Name = "Tom Jones"
                        },
                        new
                        {
                            Id = 3,
                            IdentityUserId = "b3f94d09-1d3f-4aaf-a6a7-ee10c0343d47",
                            IsBand = false,
                            Name = "Emily Davis"
                        },
                        new
                        {
                            Id = 4,
                            IdentityUserId = "c1f82e19-2e4e-4cbe-b6a8-cc20d0454e68",
                            IsBand = false,
                            Name = "Oliver Wilson"
                        },
                        new
                        {
                            Id = 5,
                            IdentityUserId = "d0e71f29-3f5f-4dbf-c6a9-dd30e0565f79",
                            IsBand = false,
                            Name = "Ava Martinez"
                        },
                        new
                        {
                            Id = 6,
                            IdentityUserId = "e0d60e39-4f6f-4ecf-d6aa-ee40e1676f8a",
                            IsBand = false,
                            Name = "Liam Garcia"
                        },
                        new
                        {
                            Id = 7,
                            IdentityUserId = "f0c50d49-5f7f-5fdf-e6ab-ff50f278709b",
                            IsBand = false,
                            Name = "Sophia Rodriguez"
                        },
                        new
                        {
                            Id = 8,
                            IdentityUserId = "a0b40c59-6e8e-6eff-f6ac-aa60f38980ac",
                            IsBand = false,
                            Name = "Noah Lopez"
                        },
                        new
                        {
                            Id = 9,
                            IdentityUserId = "90a30b69-7f9f-7dff-a6ad-bb70e49a90bd",
                            IsBand = false,
                            Name = "Mia Gonzalez"
                        },
                        new
                        {
                            Id = 10,
                            IdentityUserId = "80a20a79-8g0g-8egg-cg0c-cc80a58b90cd",
                            IsBand = false,
                            Name = "James Perez"
                        },
                        new
                        {
                            Id = 11,
                            IdentityUserId = "70a10a89-9h0h-9h99-ih9d-dd90a68c90ed",
                            IsBand = false,
                            Name = "Charlotte Lee"
                        },
                        new
                        {
                            Id = 12,
                            IdentityUserId = "60a00a99-0i0i-0i00-ji0e-ee00a78d90fd",
                            IsBand = false,
                            Name = "William Moore"
                        },
                        new
                        {
                            Id = 13,
                            IdentityUserId = "50a90aa9-1j1j-1j11-kj1f-ff10a88e90gd",
                            IsBand = false,
                            Name = "Harper Adams"
                        },
                        new
                        {
                            Id = 14,
                            IdentityUserId = "40a80ab9-2k2k-2k22-lk2g-gg20a98f90hd",
                            IsBand = false,
                            Name = "Benjamin Clark"
                        },
                        new
                        {
                            Id = 15,
                            IdentityUserId = "30a70ac9-3l3l-3l33-ml3h-hh30a08g90id",
                            IsBand = false,
                            Name = "Evelyn Hill"
                        },
                        new
                        {
                            Id = 16,
                            IdentityUserId = "20a60ad9-4m4m-4m44-nm4i-ii20a18h90jd",
                            IsBand = false,
                            Name = "Alexander Scott"
                        },
                        new
                        {
                            Id = 17,
                            IdentityUserId = "10a50ae9-5n5n-5n55-on5j-jj10a28i90kd",
                            IsBand = false,
                            Name = "Grace Ward"
                        },
                        new
                        {
                            Id = 18,
                            IdentityUserId = "00a40af9-6o6o-6o66-po6k-kk00a38j90ld",
                            IsBand = false,
                            Name = "Daniel Young"
                        },
                        new
                        {
                            Id = 19,
                            IdentityUserId = "a0a30bg9-7p7p-7p77-qp7l-ll90a48k90md",
                            IsBand = false,
                            Name = "Madison Turner"
                        },
                        new
                        {
                            Id = 20,
                            IdentityUserId = "b0a20bh9-8q8q-8q88-rq8m-mm80a58l90nd",
                            IsBand = false,
                            Name = "Gabriel Baker"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "c3aaeb97-d2ba-4a53-a521-4eea61e59b35",
                            Name = "Admin",
                            NormalizedName = "admin"
                        },
                        new
                        {
                            Id = "d13f78a0-531c-4ae4-92d6-e1ea9fdd7d63",
                            Name = "User",
                            NormalizedName = "user"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "dbc40bc6-0829-4ac5-a3ed-180f5e916a5f",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "ae34fa7e-f046-4002-a536-0f35b93f3815",
                            Email = "josh@bandblend.comx",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAIAAYagAAAAEO7MMFdgwaA1hJQcC2RqJEHMUlC6EBbghYC5TsapAYO6uLC5uVnpit7m9iYoIqvRmA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "5363876b-02e7-421b-a316-0012179f5986",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "7f4e6f8d-71ef-4b38-9aa1-6e39e4ec7c73",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "7980dcff-5169-446e-bcd4-aac31f71acd4",
                            Email = "tom@bandblend.comx",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAIAAYagAAAAEDSUl9WVEAY4ADlT80ly2NB93INpw+a1KTulVM5yTioqrSeUBqrwv4M0g139BtOcog==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "1aa24659-ca36-4f53-8a56-de911f48d3e1",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "b3f94d09-1d3f-4aaf-a6a7-ee10c0343d47",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "b7045af1-1668-476e-a0bf-6f1d6e514a4a",
                            Email = "emily@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAIAAYagAAAAEPAfmhZ1E3mfhfB3XyOEo/j+V4x8dMgL5Xl00OHtfDTxo5AxgVQ8L1dGjw74y7LKvA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "1191dd3a-f677-403d-a744-45b89f47bade",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "c1f82e19-2e4e-4cbe-b6a8-cc20d0454e68",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "a07ad351-b9fe-439d-927a-c6d3e9302f9d",
                            Email = "oliver@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAIAAYagAAAAEGLUGnd5JMbvho8IUFDElJuaqzAs03GYR6vasmFPvDCNbwMI81HayXbs15BrtHP9SQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "5ef42145-be4d-407e-a2c8-9297d431ab0a",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "d0e71f29-3f5f-4dbf-c6a9-dd30e0565f79",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "267f422a-9944-4d3d-a8f8-af9de4e706e4",
                            Email = "Ava Martinez",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAIAAYagAAAAEDMSyv+9jj5Pt/6ZnPVgm+5W8PwDasE8rB7BlN4tTVYMqjnsuY9s7gwrfG5Pb5XMcg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "26d8bc44-05d5-4f99-8b26-da044255235f",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "e0d60e39-4f6f-4ecf-d6aa-ee40e1676f8a",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c4fa2d99-4b77-422e-b602-647ae29d82e9",
                            Email = "liam@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAIAAYagAAAAEK5oow8/xTpVrGwytNf97S6nElGg93eavnPavLhtcfQqvp2qIuQrIx9rYX0Gn7FVug==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "b72c0949-43da-42cf-9668-2c8cf7379876",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "f0c50d49-5f7f-5fdf-e6ab-ff50f278709b",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "0fd6599f-383a-4f8e-8cbe-61c0b0819bcc",
                            Email = "sophia@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAIAAYagAAAAEH1squg48KdXOJ2xc6T+D2NR29gPwpcrvmtGlFUwsN8lDwAzSupuwpPfi9+H8ibyew==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "659e0980-a686-40fc-88c6-67d5977e76f2",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "a0b40c59-6e8e-6eff-f6ac-aa60f38980ac",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c5494867-a666-415f-832a-f738aca4c226",
                            Email = "noah@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAIAAYagAAAAEK0Gj5/MaJJRzTq5kTKSWDx6rZAIUP7oU3c6iJyXT1PzhjvMCY/wlkYZb8JRq9eISw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "e54d94ea-def8-492b-b505-a9b4f2d82fd5",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "90a30b69-7f9f-7dff-a6ad-bb70e49a90bd",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "267075b0-6234-4802-89fa-87d1ee9415c0",
                            Email = "mia@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAIAAYagAAAAEMC9QSoZOcyssQIK8U6gllmelO3TZ4QHhbqW3rfM4BdTHNY3SU9u9MiVwXNedXpZnA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "c1b4a312-5a6a-4dd7-9281-286cc93d621c",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "80a20a79-8g0g-8egg-cg0c-cc80a58b90cd",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "52d3a3fd-e843-4b6e-b02a-a87eab9027c6",
                            Email = "james@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAIAAYagAAAAEDSdxH0lJgAvfbqgKVMBP6nhoa2Fo7sPsxApsvzn/FbibKF8H3QOVenKHao7lwsv3w==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "020fa282-59fd-46ef-8954-937e3a94bba8",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "70a10a89-9h0h-9h99-ih9d-dd90a68c90ed",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "ae6b42f9-de25-4d32-b922-590a958579a1",
                            Email = "charlotte@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAIAAYagAAAAEGlaHimW4igkrq8W1mXyz/E/FvNkfsiKL6S0VD4t6rd8dsMT12bR26Y72qHAie7gNw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "3fb0ff32-bb02-499c-98b3-5fdfeeacd15a",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "60a00a99-0i0i-0i00-ji0e-ee00a78d90fd",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "99dfe9fc-2c6a-4e92-9549-cacfdf5590fc",
                            Email = "william@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAIAAYagAAAAEJ0NbRXSEoIyAQW8+Y9ltC1OnNEcyldWFVtrNBZThffKBB7uAb8e6V0VqQ8i9mt+rQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "c5503096-b72a-4c61-b305-fe6144e05362",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "50a90aa9-1j1j-1j11-kj1f-ff10a88e90gd",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "4bf6d5d6-f2c8-4bbf-80a6-5551906dfe58",
                            Email = "harper@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAIAAYagAAAAELyhQt6iShmhQPy6i5sHUlZEQoD2bhhR4pFNnI7nijgHuVwNlS/ju9kD2d8U/Xc3sA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a9ba092e-5080-4118-abe8-7031ab1d9376",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "40a80ab9-2k2k-2k22-lk2g-gg20a98f90hd",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "20db1f10-beb1-4163-b456-97f3f09193bc",
                            Email = "benjamin@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAIAAYagAAAAEMjJ/NHPtfoLx9PBG+w4id7kL1TDNW2eE+1gQm5lTO1hGcdKZW6zdiksfly5LdQ+LQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "f1af1123-4e12-4c1b-aca2-2bff2cf7615d",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "30a70ac9-3l3l-3l33-ml3h-hh30a08g90id",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "0c84ba2b-836e-41cf-a040-6a934fc9cf84",
                            Email = "evelyn@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAIAAYagAAAAEPC8q6MB66BYZkMIs+KSa138uEpCU/B2nBKVEwg4s1i638rdyl8j02FwE2ipuYXq6Q==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "b8640cfd-5d33-41b0-831e-1cf60beccc06",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "20a60ad9-4m4m-4m44-nm4i-ii20a18h90jd",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "44cbd76d-8cd2-435e-8717-e6fff92b4864",
                            Email = "alexander@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAIAAYagAAAAENh6sIM119T5a9ZTjFpjGerjvj4R3NXV0PJyE5XFC1bUBmQn0UYe+P1McfnMOGfR7Q==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "0f9233b2-ee18-42f9-b502-225e48bd7602",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "10a50ae9-5n5n-5n55-on5j-jj10a28i90kd",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "87cb4dc9-2dfb-4d2f-8521-0ed41526c53b",
                            Email = "grace@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAIAAYagAAAAEI4KraBdRPXzeZav6BBP/Lr1iKaxOVd6Vgi3dP6sQKP1/TR5+rDluVkqVlJzmg2Z5Q==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "db9ce4b1-6d3f-4bfa-869e-74741b709729",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "00a40af9-6o6o-6o66-po6k-kk00a38j90ld",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "6fbe524f-a404-42fa-abae-8dedc4cfe1ef",
                            Email = "daniel@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAIAAYagAAAAEKvFOJf5GFLAKFRSBKoSyLtcm4RZZKdnbCP8C+MPKhD4QYmceG1XHjKct2YyHJp/+w==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "cf35810e-eaca-49c9-9040-8b3197adafe0",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "a0a30bg9-7p7p-7p77-qp7l-ll90a48k90md",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "d5122850-f47a-49ca-bead-6e1ad6af037f",
                            Email = "madison@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAIAAYagAAAAEEnFRNbZEDx4P6XX+i4sE3TKSxK3newgkJ7LIcJxGW+7xOZuOt2FCz0AM4lcr5ZauA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "d7c11fc9-672e-4f2a-b8b3-3e446977c1af",
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = "b0a20bh9-8q8q-8q88-rq8m-mm80a58l90nd",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "9b999f0a-d2eb-42c4-9917-b3bf8c03a2b4",
                            Email = "gabriel@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAIAAYagAAAAEMNE6Tl++SMwg2kFRXqp0en/4tVRr1eKfiNf8+m7e+8HZEYJlumMgfFh3dwMt4Y8ng==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "9cded469-c7bd-4434-b159-9e2192c798d1",
                            TwoFactorEnabled = false
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .HasColumnType("text");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "dbc40bc6-0829-4ac5-a3ed-180f5e916a5f",
                            RoleId = "c3aaeb97-d2ba-4a53-a521-4eea61e59b35"
                        },
                        new
                        {
                            UserId = "7f4e6f8d-71ef-4b38-9aa1-6e39e4ec7c73",
                            RoleId = "d13f78a0-531c-4ae4-92d6-e1ea9fdd7d63"
                        },
                        new
                        {
                            UserId = "b3f94d09-1d3f-4aaf-a6a7-ee10c0343d47",
                            RoleId = "d13f78a0-531c-4ae4-92d6-e1ea9fdd7d63"
                        },
                        new
                        {
                            UserId = "c1f82e19-2e4e-4cbe-b6a8-cc20d0454e68",
                            RoleId = "d13f78a0-531c-4ae4-92d6-e1ea9fdd7d63"
                        },
                        new
                        {
                            UserId = "d0e71f29-3f5f-4dbf-c6a9-dd30e0565f79",
                            RoleId = "d13f78a0-531c-4ae4-92d6-e1ea9fdd7d63"
                        },
                        new
                        {
                            UserId = "e0d60e39-4f6f-4ecf-d6aa-ee40e1676f8a",
                            RoleId = "d13f78a0-531c-4ae4-92d6-e1ea9fdd7d63"
                        },
                        new
                        {
                            UserId = "f0c50d49-5f7f-5fdf-e6ab-ff50f278709b",
                            RoleId = "d13f78a0-531c-4ae4-92d6-e1ea9fdd7d63"
                        },
                        new
                        {
                            UserId = "a0b40c59-6e8e-6eff-f6ac-aa60f38980ac",
                            RoleId = "d13f78a0-531c-4ae4-92d6-e1ea9fdd7d63"
                        },
                        new
                        {
                            UserId = "90a30b69-7f9f-7dff-a6ad-bb70e49a90bd",
                            RoleId = "d13f78a0-531c-4ae4-92d6-e1ea9fdd7d63"
                        },
                        new
                        {
                            UserId = "80a20a79-8g0g-8egg-cg0c-cc80a58b90cd",
                            RoleId = "d13f78a0-531c-4ae4-92d6-e1ea9fdd7d63"
                        },
                        new
                        {
                            UserId = "70a10a89-9h0h-9h99-ih9d-dd90a68c90ed",
                            RoleId = "d13f78a0-531c-4ae4-92d6-e1ea9fdd7d63"
                        },
                        new
                        {
                            UserId = "60a00a99-0i0i-0i00-ji0e-ee00a78d90fd",
                            RoleId = "d13f78a0-531c-4ae4-92d6-e1ea9fdd7d63"
                        },
                        new
                        {
                            UserId = "50a90aa9-1j1j-1j11-kj1f-ff10a88e90gd",
                            RoleId = "d13f78a0-531c-4ae4-92d6-e1ea9fdd7d63"
                        },
                        new
                        {
                            UserId = "40a80ab9-2k2k-2k22-lk2g-gg20a98f90hd",
                            RoleId = "d13f78a0-531c-4ae4-92d6-e1ea9fdd7d63"
                        },
                        new
                        {
                            UserId = "30a70ac9-3l3l-3l33-ml3h-hh30a08g90id",
                            RoleId = "d13f78a0-531c-4ae4-92d6-e1ea9fdd7d63"
                        },
                        new
                        {
                            UserId = "20a60ad9-4m4m-4m44-nm4i-ii20a18h90jd",
                            RoleId = "d13f78a0-531c-4ae4-92d6-e1ea9fdd7d63"
                        },
                        new
                        {
                            UserId = "10a50ae9-5n5n-5n55-on5j-jj10a28i90kd",
                            RoleId = "d13f78a0-531c-4ae4-92d6-e1ea9fdd7d63"
                        },
                        new
                        {
                            UserId = "00a40af9-6o6o-6o66-po6k-kk00a38j90ld",
                            RoleId = "d13f78a0-531c-4ae4-92d6-e1ea9fdd7d63"
                        },
                        new
                        {
                            UserId = "a0a30bg9-7p7p-7p77-qp7l-ll90a48k90md",
                            RoleId = "d13f78a0-531c-4ae4-92d6-e1ea9fdd7d63"
                        },
                        new
                        {
                            UserId = "b0a20bh9-8q8q-8q88-rq8m-mm80a58l90nd",
                            RoleId = "d13f78a0-531c-4ae4-92d6-e1ea9fdd7d63"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("BandBlend.Models.Comment", b =>
                {
                    b.HasOne("BandBlend.Models.Post", "Post")
                        .WithMany()
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BandBlend.Models.UserProfile", "UserProfile")
                        .WithMany()
                        .HasForeignKey("UserProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("UserProfile");
                });

            modelBuilder.Entity("BandBlend.Models.CommentLike", b =>
                {
                    b.HasOne("BandBlend.Models.Comment", "Comment")
                        .WithMany()
                        .HasForeignKey("CommentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BandBlend.Models.UserProfile", "UserProfile")
                        .WithMany()
                        .HasForeignKey("UserProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Comment");

                    b.Navigation("UserProfile");
                });

            modelBuilder.Entity("BandBlend.Models.Message", b =>
                {
                    b.HasOne("BandBlend.Models.Profile", "Receiver")
                        .WithMany()
                        .HasForeignKey("ReceiverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BandBlend.Models.Profile", "Sender")
                        .WithMany()
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Receiver");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("BandBlend.Models.Post", b =>
                {
                    b.HasOne("BandBlend.Models.UserProfile", "UserProfile")
                        .WithMany()
                        .HasForeignKey("UserProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserProfile");
                });

            modelBuilder.Entity("BandBlend.Models.PostLike", b =>
                {
                    b.HasOne("BandBlend.Models.Post", "Post")
                        .WithMany()
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BandBlend.Models.UserProfile", "UserProfile")
                        .WithMany()
                        .HasForeignKey("UserProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("UserProfile");
                });

            modelBuilder.Entity("BandBlend.Models.Profile", b =>
                {
                    b.HasOne("BandBlend.Models.PrimaryGenre", "PrimaryGenre")
                        .WithMany()
                        .HasForeignKey("PrimaryGenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BandBlend.Models.PrimaryInstrument", "PrimaryInstrument")
                        .WithMany()
                        .HasForeignKey("PrimaryInstrumentId");

                    b.HasOne("BandBlend.Models.State", "State")
                        .WithMany()
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BandBlend.Models.UserProfile", "UserProfile")
                        .WithOne("Profile")
                        .HasForeignKey("BandBlend.Models.Profile", "UserProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PrimaryGenre");

                    b.Navigation("PrimaryInstrument");

                    b.Navigation("State");

                    b.Navigation("UserProfile");
                });

            modelBuilder.Entity("BandBlend.Models.ProfileSubGenre", b =>
                {
                    b.HasOne("BandBlend.Models.Profile", "Profile")
                        .WithMany("ProfileSubGenres")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BandBlend.Models.SubGenre", "SubGenre")
                        .WithMany()
                        .HasForeignKey("SubGenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profile");

                    b.Navigation("SubGenre");
                });

            modelBuilder.Entity("BandBlend.Models.ProfileTag", b =>
                {
                    b.HasOne("BandBlend.Models.Profile", "Profile")
                        .WithMany("ProfileTags")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BandBlend.Models.Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profile");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("BandBlend.Models.SavedProfile", b =>
                {
                    b.HasOne("BandBlend.Models.Profile", "Profile")
                        .WithOne("SavedProfile")
                        .HasForeignKey("BandBlend.Models.SavedProfile", "ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BandBlend.Models.UserProfile", "UserProfile")
                        .WithMany()
                        .HasForeignKey("UserProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profile");

                    b.Navigation("UserProfile");
                });

            modelBuilder.Entity("BandBlend.Models.UserProfile", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "IdentityUser")
                        .WithMany()
                        .HasForeignKey("IdentityUserId");

                    b.Navigation("IdentityUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BandBlend.Models.Profile", b =>
                {
                    b.Navigation("ProfileSubGenres");

                    b.Navigation("ProfileTags");

                    b.Navigation("SavedProfile");
                });

            modelBuilder.Entity("BandBlend.Models.UserProfile", b =>
                {
                    b.Navigation("Profile");
                });
#pragma warning restore 612, 618
        }
    }
}
